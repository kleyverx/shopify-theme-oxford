{% # Solo mostrar en la p√°gina de inicio y si est√° habilitado %}
{% if template == 'index' and settings.section_nav_enable %}

<nav class="section-scroll-nav" aria-label="Navegaci√≥n de secciones" 
     style="
       --nav-position: {{ settings.section_nav_position | default: 'right' }};
       --nav-offset: {{ settings.section_nav_offset | default: 2 }}rem;
       --nav-bg-color: {{ settings.section_nav_bg_color | default: '#FFFFFF' }};
       --nav-bg-opacity: {{ settings.section_nav_bg_opacity | default: 0.9 }};
       --nav-blur: {{ settings.section_nav_blur | default: 10 }}px;
       --nav-border-radius: {{ settings.section_nav_border_radius | default: 2 }}rem;
       --nav-text-color: {{ settings.section_nav_text_color | default: '#666666' }};
       --nav-active-bg: {{ settings.section_nav_active_bg | default: '#667eea' }};
       --nav-active-text: {{ settings.section_nav_active_text | default: '#FFFFFF' }};
       --nav-scroll-trigger: {{ settings.section_nav_scroll_trigger | default: 300 }}px;
       --nav-auto-hide: {{ settings.section_nav_auto_hide }};
       --nav-hide-delay: {{ settings.section_nav_hide_delay | default: 5 }}s;
     ">
  <ul class="section-scroll-nav__list">
    <!-- Se generan autom√°ticamente -->
  </ul>
</nav>
{% endif %}

{% stylesheet %}
  .section-scroll-nav {
    position: fixed;
    top: 50%;
    transform: translateY(-50%);
    z-index: 100;
    background: color-mix(in srgb, var(--nav-bg-color) calc(var(--nav-bg-opacity) * 100%), transparent);
    backdrop-filter: blur(var(--nav-blur));
    border-radius: var(--nav-border-radius);
    padding: 1rem 0.5rem;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }
  
  .section-scroll-nav[style*="--nav-position: right"] {
    right: var(--nav-offset);
  }
  
  .section-scroll-nav[style*="--nav-position: left"] {
    left: var(--nav-offset);
  }
  
  .section-scroll-nav.visible {
    opacity: 1;
    visibility: visible;
  }
  
  .section-scroll-nav__list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }
  
  .section-scroll-nav__item {
    display: block;
    padding: 0.75rem 1rem;
    color: var(--nav-text-color);
    text-decoration: none;
    font-size: 0.875rem;
    font-weight: 500;
    border-radius: calc(var(--nav-border-radius) * 0.5);
    transition: all 0.3s ease;
    cursor: pointer;
    white-space: nowrap;
    text-align: center;
    min-width: max-content;
    border: 1px solid transparent;
  }
  
  .section-scroll-nav__item:hover {
    background: color-mix(in srgb, var(--nav-active-bg) 15%, transparent);
    border-color: color-mix(in srgb, var(--nav-active-bg) 30%, transparent);
  }
  
  .section-scroll-nav[style*="--nav-position: left"] .section-scroll-nav__item:hover {
    transform: translateX(5px);
  }
  
  .section-scroll-nav[style*="--nav-position: right"] .section-scroll-nav__item:hover {
    transform: translateX(-5px);
  }
  
  .section-scroll-nav__item.active {
    color: var(--nav-active-text);
    background: var(--nav-active-bg);
    box-shadow: 0 4px 15px color-mix(in srgb, var(--nav-active-bg) 40%, transparent);
  }
  
  .section-scroll-nav[style*="--nav-position: left"] .section-scroll-nav__item.active {
    transform: translateX(5px);
  }
  
  .section-scroll-nav[style*="--nav-position: right"] .section-scroll-nav__item.active {
    transform: translateX(-5px);
  }
  
  /* Ocultar completamente en mobile y tablet */
  @media (max-width: 768px) {
    .section-scroll-nav {
      display: none !important;
    }
  }
{% endstylesheet %}

<script>
// Configuraci√≥n de nombres de secciones
const SECTION_NAMES = {
  "404": { "es": "Error 404", "en": "404 Error" },
  "article": { "es": "Art√≠culo", "en": "Article" },
  "benefits": { "es": "Beneficios", "en": "Benefits" },
  "blog": { "es": "Blog", "en": "Blog" },
  "brands-carousel": { "es": "Marcas", "en": "Brands" },
  "careers-investors": { "es": "√önete al Equipo", "en": "Join Our Team" },
  "careers": { "es": "Carreras", "en": "Careers" },
  "carousel-banner": { "es": "Inicio", "en": "Home" },
  "cart": { "es": "Carrito", "en": "Cart" },
  "collections": { "es": "Colecciones", "en": "Collections" },
  "custom-section": { "es": "Secci√≥n Personalizada", "en": "Custom Section" },
  "faq": { "es": "Preguntas Frecuentes", "en": "FAQ" },
  "featured-recipes": { "es": "Recetas Destacadas", "en": "Featured Recipes" },
  "footer": { "es": "Pie de p√°gina", "en": "Footer" },
  "header": { "es": "Encabezado", "en": "Header" },
  "image-text-slider": { "es": "Productos", "en": "Products" },
  "news-cards": { "es": "Noticias", "en": "News" },
  "page": { "es": "P√°gina", "en": "Page" },
  "password": { "es": "Contrase√±a", "en": "Password" },
  "product-banner-carousel": { "es": "Banner de Producto", "en": "Product Banner" },
  "product-banner-simple": { "es": "Banner Simple", "en": "Simple Banner" },
  "product-gallery": { "es": "Galer√≠a de Producto", "en": "Product Gallery" },
  "product": { "es": "Producto", "en": "Product" },
  "search": { "es": "Buscar", "en": "Search" },
  "vision-mission": { "es": "Misi√≥n y Visi√≥n", "en": "Mission & Vision" },
  "why-trust-us": { "es": "Confianza", "en": "Trust" },
  "product-carousel": { "es": "Carrusel de Productos", "en": "Product Carousel" },
  // ...otros nombres comerciales existentes...
};

// Funci√≥n helper para obtener nombre de secci√≥n
function getSectionDisplayName(sectionType, language = 'es') {
  if (SECTION_NAMES[sectionType] && SECTION_NAMES[sectionType][language]) {
    return SECTION_NAMES[sectionType][language];
  }
  
  // Fallback: generar nombre autom√°tico
  if (sectionType) {
    return sectionType
      .split('-')
      .map(word => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' ');
  }
  
  return language === 'es' ? 'Secci√≥n' : 'Section';
}

document.addEventListener('DOMContentLoaded', function() {
  console.log('üöÄ [DEBUG] Navegaci√≥n iniciando...');
  console.log('üìç [DEBUG] URL:', window.location.pathname);
  console.log('üì± [DEBUG] Window width:', window.innerWidth);
  
  // Solo ejecutar en p√°gina de inicio y en desktop
  const isIndex = window.location.pathname === '/' || 
                  window.location.pathname === '' ||
                  document.body.classList.contains('template-index');
  
  console.log('‚úÖ [DEBUG] Es p√°gina de inicio:', isIndex);
  console.log('‚úÖ [DEBUG] Es desktop:', window.innerWidth > 768);
  
  if (!isIndex || window.innerWidth <= 768) {
    console.log('‚ùå [DEBUG] Saliendo - no cumple condiciones');
    return;
  }
  
  const nav = document.querySelector('.section-scroll-nav');
  const navList = document.querySelector('.section-scroll-nav__list');
  
  console.log('üîç [DEBUG] Nav element:', nav);
  console.log('üîç [DEBUG] NavList element:', navList);
  
  if (!nav || !navList) {
    console.log('‚ùå [DEBUG] No se encontraron elementos DOM');
    return;
  }

  // Obtener configuraciones del elemento nav
  const scrollTrigger = parseInt(nav.style.getPropertyValue('--nav-scroll-trigger')) || 300;
  const autoHide = nav.style.getPropertyValue('--nav-auto-hide') === 'true';
  const hideDelay = parseInt(nav.style.getPropertyValue('--nav-hide-delay')) || 5;

  // Funci√≥n para obtener nombre de secci√≥n
  function getSectionName(element) {
    let sectionType = element.getAttribute('data-section-type') || '';
    
    // Si no hay data-section-type, extraer del ID de Shopify
    if (!sectionType) {
      const sectionId = element.getAttribute('id') || '';
      
      // Detectar patr√≥n: shopify-section-template--...brands_carousel_... 
      if (sectionId.includes('brands_carousel')) {
        sectionType = 'brands-carousel';
      } else if (sectionId.includes('carousel_banner') || sectionId.includes('carousel-banner')) {
        sectionType = 'carousel-banner';
      } else if (sectionId.includes('news_cards') || sectionId.includes('news-cards')) {
        sectionType = 'news-cards';
      } else if (sectionId.includes('why_trust_us') || sectionId.includes('why-trust-us')) {
        sectionType = 'why-trust-us';
      } else if (sectionId.includes('image_text_slider') || sectionId.includes('image-text-slider')) {
        sectionType = 'image-text-slider';
      } else if (sectionId.includes('vision_mission') || sectionId.includes('vision-mission')) {
        sectionType = 'vision-mission';
      } else if (sectionId.includes('faq')) {
        sectionType = 'faq';
      } else if (sectionId.includes('careers_investors') || sectionId.includes('careers-investors')) {
        sectionType = 'careers-investors';
      } else if (sectionId.includes('careers')) {
        sectionType = 'careers';
      }
      
      // Fallback: patr√≥n gen√©rico shopify-section-template--...
      if (!sectionType && sectionId.includes('shopify-section-template--')) {
        const idParts = sectionId.split('__');
        if (idParts.length >= 2) {
          // Extraer la parte despu√©s del segundo '__'
          const sectionPart = idParts[1];
          if (sectionPart) {
            // Remover el sufijo aleatorio si existe
            sectionType = sectionPart.replace(/_[A-Za-z0-9]{6}$/, '').replace(/_/g, '-');
          }
        }
      }
    }
    
    // Si a√∫n no hay tipo, intentar detectar por clases CSS
    if (!sectionType) {
      const className = element.className || '';
      if (className.includes('news-cards')) {
        sectionType = 'news-cards';
      } else if (className.includes('brands-carousel')) {
        sectionType = 'brands-carousel';
      } else if (className.includes('trust-packery') || className.includes('why-trust')) {
        sectionType = 'why-trust-us';
      } else if (className.includes('image-text-slider')) {
        sectionType = 'image-text-slider';
      } else if (className.includes('carousel-banner')) {
        sectionType = 'carousel-banner';
      }
    }
    
    // Usar nuestra funci√≥n de configuraci√≥n
    if (sectionType) {
      return getSectionDisplayName(sectionType, 'es');
    }
    
    return 'Secci√≥n';
  }

  // Detectar secciones
  const sections = [];
  const allSections = document.querySelectorAll('.shopify-section');
  let isFirstSection = true;

  console.log('üîç [DEBUG] Total secciones encontradas:', allSections.length);

  allSections.forEach((element, index) => {
    console.log(`üìã [DEBUG] Secci√≥n ${index}:`, {
      id: element.id,
      dataType: element.getAttribute('data-section-type'),
      className: element.className,
      height: element.offsetHeight,
      width: element.offsetWidth
    });
    
    // Saltar header y footer
    if (element.id && (element.id.includes('header') || element.id.includes('footer'))) {
      console.log(`‚ùå [DEBUG] Saltando header/footer: ${element.id}`);
      return;
    }

    const name = getSectionName(element);
    console.log(`üìù [DEBUG] Nombre generado: "${name}"`);
    
    // Solo a√±adir secciones que sean visibles
    if (element.offsetHeight > 50 && element.offsetWidth > 50) {
      sections.push({
        element: element,
        name: name,
        id: element.id || `section-${index}`,
        isFirst: isFirstSection
      });
      console.log(`‚úÖ [DEBUG] Secci√≥n a√±adida: "${name}"`);
      isFirstSection = false;
    } else {
      console.log(`‚ùå [DEBUG] Secci√≥n muy peque√±a: ${element.offsetHeight}x${element.offsetWidth}`);
    }
  });

  console.log('üìä [DEBUG] Secciones finales:', sections.map(s => s.name));

  // Si hay muy pocas secciones, no mostrar navegaci√≥n
  if (sections.length < 2) {
    console.log(`‚ùå [DEBUG] Muy pocas secciones (${sections.length}), no mostrando navegaci√≥n`);
    return;
  }

  // Crear botones de navegaci√≥n
  sections.forEach(section => {
    const button = document.createElement('a');
    button.className = 'section-scroll-nav__item';
    button.textContent = section.name;
    button.href = `#${section.id}`;
    
    button.addEventListener('click', function(e) {
      e.preventDefault();
      
      section.element.scrollIntoView({
        behavior: 'smooth',
        block: 'start'
      });
    });
    
    navList.appendChild(button);
  });

  console.log('üéØ [DEBUG] Navegaci√≥n creada con', sections.length, 'secciones');
  console.log('üîó [DEBUG] Botones creados:', navList.children.length);

  // Funci√≥n para actualizar secci√≥n activa
  function updateActiveSection() {
    const scrollY = window.scrollY;
    let activeIndex = 0;

    // Encontrar la secci√≥n que est√° m√°s cerca del viewport
    for (let i = 0; i < sections.length; i++) {
      const sectionTop = sections[i].element.offsetTop;
      const sectionHeight = sections[i].element.offsetHeight;
      
      if (scrollY >= sectionTop - 200) {
        activeIndex = i;
      }
    }

    // Actualizar clases activas
    document.querySelectorAll('.section-scroll-nav__item').forEach((item, index) => {
      item.classList.toggle('active', index === activeIndex);
    });
  }

  // Control de visibilidad basado en scroll
  let hideTimeout;
  
  function showNav() {
    nav.classList.add('visible');
    if (autoHide) {
      clearTimeout(hideTimeout);
      hideTimeout = setTimeout(() => {
        nav.classList.remove('visible');
      }, hideDelay * 1000);
    }
  }
  
  function hideNav() {
    nav.classList.remove('visible');
  }

  // Event listeners
  window.addEventListener('scroll', function() {
    const scrollY = window.scrollY;
    
    if (scrollY > scrollTrigger) {
      showNav();
    } else {
      hideNav();
    }
    
    updateActiveSection();
  });

  // Si auto-hide est√° habilitado, manejar hover
  if (autoHide) {
    nav.addEventListener('mouseenter', () => {
      clearTimeout(hideTimeout);
    });
    
    nav.addEventListener('mouseleave', () => {
      hideTimeout = setTimeout(() => {
        nav.classList.remove('visible');
      }, hideDelay * 1000);
    });
  }

  // Inicializar estado
  updateActiveSection();
});
</script>