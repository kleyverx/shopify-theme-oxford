{% # Solo mostrar en la p√°gina de inicio y si est√° habilitado %}
{% if template == 'index' and settings.section_nav_enable %}

<nav class="section-scroll-nav" aria-label="Navegaci√≥n de secciones" 
     style="
       --nav-position: {{ settings.section_nav_position | default: 'right' }};
       --nav-offset: {{ settings.section_nav_offset | default: 2 }}rem;
       --nav-bg-color: {{ settings.section_nav_bg_color | default: '#FFFFFF' }};
       --nav-bg-opacity: {{ settings.section_nav_bg_opacity | default: 0.9 }};
       --nav-blur: {{ settings.section_nav_blur | default: 10 }}px;
       --nav-border-radius: {{ settings.section_nav_border_radius | default: 2 }}rem;
       --nav-text-color: {{ settings.section_nav_text_color | default: '#666666' }};
       --nav-active-bg: {{ settings.section_nav_active_bg | default: '#667eea' }};
       --nav-active-text: {{ settings.section_nav_active_text | default: '#FFFFFF' }};
       --nav-scroll-trigger: {{ settings.section_nav_scroll_trigger | default: 300 }}px;
       --nav-auto-hide: {{ settings.section_nav_auto_hide }};
       --nav-hide-delay: {{ settings.section_nav_hide_delay | default: 5 }}s;
     ">
  <ul class="section-scroll-nav__list">
    <!-- Se generan autom√°ticamente -->
  </ul>
</nav>
{% endif %}

{% stylesheet %}
  .section-scroll-nav {
    position: fixed;
    top: 50%;
    transform: translateY(-50%);
    z-index: 100;
    background: color-mix(in srgb, var(--nav-bg-color) calc(var(--nav-bg-opacity) * 100%), transparent);
    backdrop-filter: blur(var(--nav-blur));
    border-radius: var(--nav-border-radius);
    padding: 1rem 0.5rem;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    border: 1px solid rgba(255, 255, 255, 0.2);
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
  }
  
  .section-scroll-nav[style*="--nav-position: right"] {
    right: var(--nav-offset);
  }
  
  .section-scroll-nav[style*="--nav-position: left"] {
    left: var(--nav-offset);
  }
  
  .section-scroll-nav.visible {
    opacity: 1;
    visibility: visible;
  }
  
  .section-scroll-nav.auto-hidden {
    opacity: 0.3;
    transition: all 0.3s ease;
  }
  
  .section-scroll-nav[style*="--nav-position: left"].auto-hidden {
    transform: translateY(-50%) translateX(-80%);
  }
  
  .section-scroll-nav[style*="--nav-position: right"].auto-hidden {
    transform: translateY(-50%) translateX(80%);
  }
  
  .section-scroll-nav:hover.auto-hidden {
    opacity: 1;
    transform: translateY(-50%);
  }
  
  .section-scroll-nav__list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }
  
  .section-scroll-nav__item {
    background: none;
    border: none;
    padding: 0.75rem 1rem;
    cursor: pointer;
    border-radius: calc(var(--nav-border-radius) * 0.75);
    transition: all 0.3s ease;
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--nav-text-color);
    white-space: nowrap;
  }
  
  .section-scroll-nav__item:hover {
    color: var(--nav-active-text);
    background: var(--nav-active-bg);
  }
  
  .section-scroll-nav[style*="--nav-position: left"] .section-scroll-nav__item:hover {
    transform: translateX(5px);
  }
  
  .section-scroll-nav[style*="--nav-position: right"] .section-scroll-nav__item:hover {
    transform: translateX(-5px);
  }
  
  .section-scroll-nav__item.active {
    color: var(--nav-active-text);
    background: var(--nav-active-bg);
    box-shadow: 0 4px 15px color-mix(in srgb, var(--nav-active-bg) 40%, transparent);
  }
  
  .section-scroll-nav[style*="--nav-position: left"] .section-scroll-nav__item.active {
    transform: translateX(5px);
  }
  
  .section-scroll-nav[style*="--nav-position: right"] .section-scroll-nav__item.active {
    transform: translateX(-5px);
  }
  
  /* Ocultar completamente en mobile y tablet */
  @media (max-width: 768px) {
    .section-scroll-nav {
      display: none !important;
    }
  }
{% endstylesheet %}

<script>
console.log('üöÄ Iniciando navegaci√≥n de secciones');

// Configuraci√≥n de nombres de secciones
const SECTION_NAMES = {
  "carousel-banner": { "es": "Inicio", "en": "Home" },
  "hero-banner": { "es": "Banner Principal", "en": "Hero Banner" },
  "hero": { "es": "Inicio", "en": "Home" },
  "banner": { "es": "Inicio", "en": "Home" },
  "main-banner": { "es": "Inicio", "en": "Home" },
  "news-cards": { "es": "Noticias", "en": "News" },
  "why-trust-us": { "es": "Confianza", "en": "Trust" },
  "why-trust": { "es": "Confianza", "en": "Trust" },
  "trust-us": { "es": "Confianza", "en": "Trust" },
  "trust": { "es": "Confianza", "en": "Trust" },
  "brands-carousel": { "es": "Marcas", "en": "Brands" },
  "image-text-slider": { "es": "Productos", "en": "Products" },
  "image-text-slider-section": { "es": "Productos", "en": "Products" },
  "vision-mission": { "es": "Misi√≥n y Visi√≥n", "en": "Mission & Vision" },
  "faq": { "es": "Preguntas Frecuentes", "en": "FAQ" },
  "careers-investors": { "es": "√önete al Equipo", "en": "Join Our Team" },
  "careers": { "es": "Carreras", "en": "Careers" },
  "about-us": { "es": "Nosotros", "en": "About Us" },
  "testimonials": { "es": "Testimonios", "en": "Testimonials" },
  "contact": { "es": "Contacto", "en": "Contact" },
  "services": { "es": "Servicios", "en": "Services" }
};

console.log('üìã Configuraci√≥n cargada:', SECTION_NAMES);

// Funci√≥n helper para obtener nombre de secci√≥n
function getSectionDisplayName(sectionType, language = 'es') {
  if (SECTION_NAMES[sectionType] && SECTION_NAMES[sectionType][language]) {
    return SECTION_NAMES[sectionType][language];
  }
  
  // Fallback: generar nombre autom√°tico
  if (sectionType) {
    return sectionType
      .split('-')
      .map(word => word.charAt(0).toUpperCase() + word.slice(1))
      .join(' ');
  }
  
  return language === 'es' ? 'Secci√≥n' : 'Section';
}

document.addEventListener('DOMContentLoaded', function() {
  console.log('ÔøΩ Iniciando navegaci√≥n de secciones');
  
  // Solo ejecutar en p√°gina de inicio y en desktop
  const isIndex = window.location.pathname === '/' || 
                  window.location.pathname === '' ||
                  document.body.classList.contains('template-index');
  
  console.log('üîç Verificaciones:', {
    pathname: window.location.pathname,
    isIndex: isIndex,
    windowWidth: window.innerWidth,
    isDesktop: window.innerWidth > 768
  });
  
  if (!isIndex || window.innerWidth <= 768) {
    console.log('‚ùå Saliendo: no es p√°gina de inicio o no es desktop');
    return;
  }
  
  const nav = document.querySelector('.section-scroll-nav');
  const navList = document.querySelector('.section-scroll-nav__list');
  
  if (!nav || !navList) {
    console.log('‚ùå No se encontraron elementos de navegaci√≥n');
    return;
  }

  console.log('‚úÖ Elementos encontrados, detectando secciones...');

  // Obtener configuraciones del elemento nav
  const navStyles = getComputedStyle(nav);
  const scrollTrigger = parseInt(nav.style.getPropertyValue('--nav-scroll-trigger')) || 300;
  const autoHide = nav.style.getPropertyValue('--nav-auto-hide') === 'true';
  const hideDelay = parseInt(nav.style.getPropertyValue('--nav-hide-delay')) || 5;

  console.log('‚öôÔ∏è Configuraciones:', {
    scrollTrigger: scrollTrigger,
    autoHide: autoHide,
    hideDelay: hideDelay
  });

  // Funci√≥n para obtener nombre de secci√≥n
  function getSectionName(element) {
    let sectionType = element.getAttribute('data-section-type') || '';
    
    // Si no hay data-section-type, extraer del ID de Shopify
    if (!sectionType) {
      const sectionId = element.getAttribute('id') || '';
      
      // Detectar patr√≥n: shopify-section-template--...brands_carousel_... 
      if (sectionId.includes('brands_carousel')) {
        sectionType = 'brands-carousel';
      } else if (sectionId.includes('carousel_banner') || sectionId.includes('carousel-banner')) {
        sectionType = 'carousel-banner';
      } else if (sectionId.includes('news_cards') || sectionId.includes('news-cards')) {
        sectionType = 'news-cards';
      } else if (sectionId.includes('why_trust_us') || sectionId.includes('why-trust-us')) {
        sectionType = 'why-trust-us';
      } else if (sectionId.includes('image_text_slider') || sectionId.includes('image-text-slider')) {
        sectionType = 'image-text-slider';
      } else if (sectionId.includes('vision_mission') || sectionId.includes('vision-mission')) {
        sectionType = 'vision-mission';
      } else if (sectionId.includes('faq')) {
        sectionType = 'faq';
      } else if (sectionId.includes('careers_investors') || sectionId.includes('careers-investors')) {
        sectionType = 'careers-investors';
      } else if (sectionId.includes('careers')) {
        sectionType = 'careers';
      }
      
      // Fallback: patr√≥n gen√©rico shopify-section-template--...
      if (!sectionType && sectionId.includes('shopify-section-template--')) {
        const idParts = sectionId.split('__');
        if (idParts.length >= 2) {
          // Extraer la parte despu√©s del segundo '__'
          const sectionPart = idParts[1];
          if (sectionPart) {
            // Remover el sufijo aleatorio si existe
            sectionType = sectionPart.replace(/_[A-Za-z0-9]{6}$/, '').replace(/_/g, '-');
          }
        }
      }
    }
    
    // Si a√∫n no hay tipo, intentar detectar por clases CSS
    if (!sectionType) {
      const className = element.className || '';
      if (className.includes('news-cards')) {
        sectionType = 'news-cards';
      } else if (className.includes('brands-carousel')) {
        sectionType = 'brands-carousel';
      } else if (className.includes('trust-packery') || className.includes('why-trust')) {
        sectionType = 'why-trust-us';
      } else if (className.includes('image-text-slider')) {
        sectionType = 'image-text-slider';
      } else if (className.includes('carousel-banner')) {
        sectionType = 'carousel-banner';
      }
    }
    
    console.log('üîç Secci√≥n detectada:', {
      element: element,
      sectionType: sectionType,
      id: element.getAttribute('id'),
      dataType: element.getAttribute('data-section-type'),
      className: element.className
    });
    
    // Usar nuestra funci√≥n de configuraci√≥n
    if (sectionType) {
      const configuredName = getSectionDisplayName(sectionType, 'es');
      console.log('üìù Nombre final:', configuredName);
      return configuredName;
    }
    
    console.log('‚ùå Sin tipo de secci√≥n detectado');
    return 'Secci√≥n';
  }

  // Detectar secciones
  const sections = [];
  const allSections = document.querySelectorAll('.shopify-section');
  let isFirstSection = true;
  
  console.log('üîç Total secciones encontradas:', allSections.length);
  
  allSections.forEach((element, index) => {
    console.log(`Analizando secci√≥n ${index + 1}:`, element);
    
    // Excluir header y footer
    const isHeader = element.querySelector('header') || 
                     element.getAttribute('data-section-type') === 'header-group';
    const isFooter = element.querySelector('footer') || 
                     element.getAttribute('data-section-type') === 'footer-group';
    
    if (isHeader || isFooter) {
      console.log('‚ùå Saltando header/footer');
      return;
    }
    
    // Solo secciones visibles
    if (element.offsetHeight > 50 && element.offsetWidth > 0) {
      const name = isFirstSection ? 'Inicio' : getSectionName(element);
      
      sections.push({
        element: element,
        name: name
      });
      
      console.log('‚úÖ Secci√≥n a√±adida:', name);
      isFirstSection = false;
    } else {
      console.log('‚ùå Secci√≥n no visible (height:', element.offsetHeight, 'width:', element.offsetWidth, ')');
    }
  });
  
  // Solo mostrar si hay m√°s de 1 secci√≥n
  if (sections.length <= 1) {
    console.log('‚ùå Muy pocas secciones (', sections.length, '), ocultando navegaci√≥n');
    nav.style.display = 'none';
    return;
  }
  
  console.log('üìä Secciones finales:', sections.map(s => s.name));
  
  // Crear botones de navegaci√≥n
  sections.forEach((section, index) => {
    const li = document.createElement('li');
    const button = document.createElement('button');
    
    button.className = 'section-scroll-nav__item';
    button.textContent = section.name;
    button.setAttribute('data-index', index);
    
    // Click para scroll suave
    button.addEventListener('click', function() {
      console.log('üñ±Ô∏è Click en:', section.name);
      const rect = section.element.getBoundingClientRect();
      const scrollTop = window.pageYOffset;
      const targetY = rect.top + scrollTop - 80;
      
      window.scrollTo({
        top: Math.max(0, targetY),
        behavior: 'smooth'
      });
    });
    
    li.appendChild(button);
    navList.appendChild(li);
  });
  
  console.log('‚úÖ Botones creados');
  
  // Observer para resaltar secci√≥n activa
  const observer = new IntersectionObserver((entries) => {
    let activeEntry = null;
    let maxRatio = 0;
    
    entries.forEach(entry => {
      if (entry.isIntersecting && entry.intersectionRatio > maxRatio) {
        maxRatio = entry.intersectionRatio;
        activeEntry = entry;
      }
    });
    
    if (activeEntry) {
      const sectionIndex = sections.findIndex(s => s.element === activeEntry.target);
      
      if (sectionIndex !== -1) {
        document.querySelectorAll('.section-scroll-nav__item').forEach(btn => {
          btn.classList.remove('active');
        });
        
        const activeButton = document.querySelector(`[data-index="${sectionIndex}"]`);
        if (activeButton) {
          activeButton.classList.add('active');
          console.log('üéØ Secci√≥n activa:', sections[sectionIndex].name);
        }
      }
    }
  }, {
    threshold: [0.2, 0.5],
    rootMargin: '-20% 0px -20% 0px'
  });
  
  // Observar secciones
  sections.forEach(section => {
    observer.observe(section.element);
  });
  
  console.log('üëÅÔ∏è Observer configurado');
  
  // Control de visibilidad con scroll
  let isVisible = false;
  let autoHideTimeout = null;
  
  function handleScroll() {
    const shouldShow = window.scrollY > scrollTrigger;
    
    if (shouldShow && !isVisible) {
      nav.classList.add('visible');
      isVisible = true;
      console.log('üëÅÔ∏è Navegaci√≥n visible');
      
      // Auto-hide si est√° habilitado
      if (autoHide) {
        startAutoHideTimer();
      }
    } else if (!shouldShow && isVisible) {
      nav.classList.remove('visible');
      nav.classList.remove('auto-hidden');
      isVisible = false;
      clearAutoHideTimer();
      console.log('üëÅÔ∏è Navegaci√≥n oculta');
    }
  }
  
  function startAutoHideTimer() {
    clearAutoHideTimer();
    autoHideTimeout = setTimeout(() => {
      if (isVisible) {
        nav.classList.add('auto-hidden');
        console.log('‚è∞ Auto-hide activado');
      }
    }, hideDelay * 1000);
  }
  
  function clearAutoHideTimer() {
    if (autoHideTimeout) {
      clearTimeout(autoHideTimeout);
      autoHideTimeout = null;
    }
  }
  
  // Eventos para auto-hide
  if (autoHide) {
    nav.addEventListener('mouseenter', () => {
      nav.classList.remove('auto-hidden');
      clearAutoHideTimer();
    });
    
    nav.addEventListener('mouseleave', () => {
      if (isVisible) {
        startAutoHideTimer();
      }
    });
  }
  
  window.addEventListener('scroll', handleScroll, { passive: true });
  console.log('‚úÖ Navegaci√≥n completamente inicializada');
});
</script>

{% comment %}
Navegaci√≥n autom√°tica por secciones - VERSI√ìN FINAL CON DEBUG:

Caracter√≠sticas principales:
1. Detecci√≥n autom√°tica de secciones en la p√°gina de inicio
2. Nombres configurados para todas las secciones principales
3. Solo se muestra en desktop (> 768px)
4. Aparece despu√©s de 300px de scroll
5. Navegaci√≥n suave y resaltado de secci√≥n activa
6. Configuraci√≥n integrada para evitar problemas de timing
7. Logs detallados para debug

Secciones configuradas:
- carousel-banner ‚Üí Inicio
- news-cards ‚Üí Noticias  
- why-trust-us ‚Üí Confianza
- brands-carousel ‚Üí Marcas
- image-text-slider ‚Üí Productos

Para agregar nuevas secciones:
1. A√±adir entrada en SECTION_NAMES
2. Definir nombres en espa√±ol e ingl√©s
3. Guardar y recargar
{% endcomment %}